<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>SHF: Small: Open Source Software Components: Utilization Assessment and Automatic Retrieval</AwardTitle>
    <AwardEffectiveDate>08/01/2010</AwardEffectiveDate>
    <AwardExpirationDate>07/31/2015</AwardExpirationDate>
    <AwardAmount>499619</AwardAmount>
    <AwardInstrument>
      <Value>Continuing grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computing and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Sol J. Greenspan</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>Software quality has been an important but illusive concept for several decades, with experts different, sometimes conflicting, guidelines. Using an ecosystem of about 20,000 open source Java projects, this study will to try to discover correlations between open source component utilization and software quality metrics, in order to provide the strongest empirical evidence yet as to how the several metrics pertaining to software quality correlate with actual utilization of reusable components. This study will provide a scientific basis to some of the existing guidelines and to the dismissal of some others. If no correlations are found, this result will disrupt current conceptualizations of component quality, forcing researchers and developers to reassess their understanding of software quality and reusable components. Software being a foundation of modern society, and Open Source development being a significant movement in society at large, it is critical to gain a deeper understanding of software quality on a global scale, leading to the development of innovative tools and methods.&lt;br/&gt;&lt;br/&gt;The metrics used in this study are those defined by the SQO-OSS Quality Model. To understand correlations, the following method will be used. First the dependency graph will be built, capturing software dependencies at the global scale. This requires overcoming technical challenges in cleaning up and clustering the data, as real world projects contain all sorts of idiosyncrasies related to the use of external components. Second, a suite of utilization metrics will be developed using this global dependency graph that capture the depth and breadth of component usage by these projects. Finally, the SQO-OSS Quality metrics for a significant subset of projects in the data set will be computed and compared with the projects' utilization metrics in order to reveal the correlations.</AbstractNarration>
    <MinAmdLetterDate>07/26/2010</MinAmdLetterDate>
    <MaxAmdLetterDate>06/01/2012</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1018374</AwardID>
    <Investigator>
      <FirstName>Cristina</FirstName>
      <LastName>Lopes</LastName>
      <EmailAddress>lopes@ics.uci.edu</EmailAddress>
      <StartDate>07/26/2010</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>University of California-Irvine</Name>
      <CityName>Irvine</CityName>
      <ZipCode>926173067</ZipCode>
      <PhoneNumber>9498244768</PhoneNumber>
      <StreetAddress>5171 California Avenue, Ste 150</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>California</StateName>
      <StateCode>CA</StateCode>
    </Institution>
    <ProgramElement>
      <Code>7798</Code>
      <Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
    </ProgramElement>
    <ProgramElement>
      <Code>7944</Code>
      <Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
    </ProgramElement>
    <ProgramReference>
      <Code>9150</Code>
      <Text>EXP PROG TO STIM COMP RES</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>9215</Code>
      <Text>HIGH PERFORMANCE COMPUTING SYSTEMS</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>HPCC</Code>
      <Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
    </ProgramReference>
  </Award>
</rootTag>
