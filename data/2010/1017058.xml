<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>CSR: Small: Using Thread-Local Memory Mapping to Support Memory Abstractions for Dynamic Multithreading</AwardTitle>
    <AwardEffectiveDate>08/01/2010</AwardEffectiveDate>
    <AwardExpirationDate>07/31/2013</AwardExpirationDate>
    <AwardAmount>500000</AwardAmount>
    <AwardInstrument>
      <Value>Standard Grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05050000</Code>
      <Directorate>
        <LongName>Directorate for Computer &amp; Information Science &amp; Engineering</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computer and Network Systems</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>M. Mimi McClure</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>Dynamic multithreading has emerged as a dominant paradigm for simplifying the programming of parallel applications on shared-memory multicore processors. Concurrency platforms incorporating dynamic multithreading provide memory abstractions, such as cactus stacks and hyperobjects, which make many parallel programming chores more like ordinary serial programming. Unfortunately, the overhead of these memory abstractions limits the contexts in which they can be effectively used. &lt;br/&gt;&lt;br/&gt;This project is exploring how thread-local memory mapping (TLMM) can be used to provide low-overhead support for memory abstractions. TLMM is a novel operating-system feature that allows different pthreads to map a region of an otherwise shared virtual-address space independently. &lt;br/&gt;&lt;br/&gt;The researchers are building a robust TLMM-Linux and a fully functional prototype of a concurrency platform, called Cilk-M, which includes a portable compiler, an efficient implementation of a runtime scheduler, and implementations of cactus stacks and hyperobjects. They are also engaged in programming and measuring application benchmarks, such as Boolean satisfiability, to understand how the memory abstractions might be optimized and what new memory abstractions might be invented to simplify dynamic multithreaded programming. Finally, they are studying the Cilk-M technology to understand its theoretical properties and investigating how operating systems and hardware might better facilitate the implementation of memory abstractions.</AbstractNarration>
    <MinAmdLetterDate>07/15/2010</MinAmdLetterDate>
    <MaxAmdLetterDate>07/15/2010</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1017058</AwardID>
    <Investigator>
      <FirstName>Charles</FirstName>
      <LastName>Leiserson</LastName>
      <EmailAddress>cel@csail.mit.edu</EmailAddress>
      <StartDate>07/15/2010</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Investigator>
      <FirstName>Bradley</FirstName>
      <LastName>Kuszmaul</LastName>
      <EmailAddress>bradley@mit.edu</EmailAddress>
      <StartDate>07/15/2010</StartDate>
      <EndDate/>
      <RoleCode>Co-Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>Massachusetts Institute of Technology</Name>
      <CityName>Cambridge</CityName>
      <ZipCode>021394301</ZipCode>
      <PhoneNumber>6172531000</PhoneNumber>
      <StreetAddress>77 MASSACHUSETTS AVE</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Massachusetts</StateName>
      <StateCode>MA</StateCode>
    </Institution>
  </Award>
</rootTag>
