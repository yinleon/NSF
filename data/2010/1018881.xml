<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>SHF Small: A Compiler-Based Auto-Tuning Framework for Many-Core Code Generation</AwardTitle>
    <AwardEffectiveDate>07/01/2010</AwardEffectiveDate>
    <AwardExpirationDate>06/30/2015</AwardExpirationDate>
    <AwardAmount>481050</AwardAmount>
    <AwardInstrument>
      <Value>Continuing grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computing and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Almadena Y. Chtchelkanova</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>This project provides a compiler-based foundation for data-parallel optimization and code generation that can yield very high performance across a range of different multi-core and many-core architectures while increasing the productivity of application programmers. The project is targeting two distinct architectures, a conventional quad-core microprocessor and a graphics processing unit (GPU) with 240 cores, as well as a heterogeneous system that combines both. The technology represents a significant departure from the organization of contemporary compilers, automating as much of optimization as possible, but opening up the mapping process to provide savvy programmers the control they so often desire. The unique features of the system include: (1) transformation recipes as a programmer's or high-level compiler's interface to optimization and code generation; (2) a polyhedral framework to mathematically represent code structures and optimizations for robust code generation; and (3) auto-tuning technology to compactly describe and systematically evaluate a range of possibleimplementations of a computation. The most novel of these is the is the transformation recipe, which factors out the commonality of OpenMP, CUDA and OpenCL code generation, thus supporting the heterogeneous platform and facilitating late-binding decisions of which implementation to use. The software system from previous work is being released, and has accelerated both libraries and scientific applications. With the right transformation recipe for the auto-tuning system to evaluate, the resulting automatically-generated code yields high performance, in some cases competitive or even better than manually-coded implementations. The PIs plan to expand this capability to a broader set of applications and architectural features.</AbstractNarration>
    <MinAmdLetterDate>06/18/2010</MinAmdLetterDate>
    <MaxAmdLetterDate>06/05/2012</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1018881</AwardID>
    <Investigator>
      <FirstName>Mary</FirstName>
      <LastName>Hall</LastName>
      <EmailAddress>mhall@cs.utah.edu</EmailAddress>
      <StartDate>06/18/2010</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Investigator>
      <FirstName>Chun</FirstName>
      <LastName>Chen</LastName>
      <EmailAddress>chunchen@cs.utah.edu</EmailAddress>
      <StartDate>06/18/2010</StartDate>
      <EndDate/>
      <RoleCode>Co-Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>University of Utah</Name>
      <CityName>SALT LAKE CITY</CityName>
      <ZipCode>841128930</ZipCode>
      <PhoneNumber>8015816903</PhoneNumber>
      <StreetAddress>75 S 2000 E</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Utah</StateName>
      <StateCode>UT</StateCode>
    </Institution>
    <ProgramElement>
      <Code>7329</Code>
      <Text>COMPILERS</Text>
    </ProgramElement>
    <ProgramReference>
      <Code>9150</Code>
      <Text>EXP PROG TO STIM COMP RES</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>9218</Code>
      <Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>HPCC</Code>
      <Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
    </ProgramReference>
  </Award>
</rootTag>
