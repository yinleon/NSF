<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>SHF: Small: Programming Support for Checkpointing and Replay</AwardTitle>
    <AwardEffectiveDate>08/01/2010</AwardEffectiveDate>
    <AwardExpirationDate>07/31/2015</AwardExpirationDate>
    <AwardAmount>400000</AwardAmount>
    <AwardInstrument>
      <Value>Standard Grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computing and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Nina Amla</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>The fastest growing areas of IT application development are for mobile devices and browser-based applications. Smartphones are becoming more capable and widespread, which attracts both users and application developers. Browser-based applications are replacing traditional native applications. &lt;br/&gt;&lt;br/&gt;This project investigates new programming abstractions, libraries, and tools that can increase programmer and maintainer productivity for mobile and browser-based applications. Among the programming concerns that distinguish these applications from traditional applications, the project focusses on application-level checkpointing and replay. This feature enables the application to save a compact description of its state for restoring at a future time. This is one aspect that is required for usability of mobile and browser-based applications, yet is error-prone, lacks programming support and, if solved properly, can serve as foundation for powerful testing and debugging tools.&lt;br/&gt;&lt;br/&gt;This project addresses the checkpointing and replay problem from a language-level and application-level perspective. A system of program annotations will be developed to assist programmers in developing the checkpointing and replay aspects of their programs. The annotations can be used as a basis for synthesis of the checkpointing code, and also as an input for static and dynamic analysis tools that can ensure the correctness of the checkpointing and replay aspects. &lt;br/&gt;&lt;br/&gt;This project also explores ways in which an effective checkpointing and replay mechanism for mobile and web-based applications can improve the software maintenance lifecycle, through automated test generation and improved debugging support of deployed software.</AbstractNarration>
    <MinAmdLetterDate>07/31/2010</MinAmdLetterDate>
    <MaxAmdLetterDate>07/31/2010</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1017810</AwardID>
    <Investigator>
      <FirstName>George</FirstName>
      <LastName>Necula</LastName>
      <EmailAddress>necula@cs.berkeley.edu</EmailAddress>
      <StartDate>07/31/2010</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>University of California-Berkeley</Name>
      <CityName>BERKELEY</CityName>
      <ZipCode>947045940</ZipCode>
      <PhoneNumber>5106428109</PhoneNumber>
      <StreetAddress>Sponsored Projects Office</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>California</StateName>
      <StateCode>CA</StateCode>
    </Institution>
    <ProgramElement>
      <Code>7944</Code>
      <Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
    </ProgramElement>
    <ProgramReference>
      <Code>9150</Code>
      <Text>EXP PROG TO STIM COMP RES</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>9215</Code>
      <Text>HIGH PERFORMANCE COMPUTING SYSTEMS</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>HPCC</Code>
      <Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
    </ProgramReference>
  </Award>
</rootTag>
