<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>SHF: Small: Algorithms for Dynamic Analysis of Run-Time Bloat</AwardTitle>
    <AwardEffectiveDate>09/15/2010</AwardEffectiveDate>
    <AwardExpirationDate>08/31/2014</AwardExpirationDate>
    <AwardAmount>356531</AwardAmount>
    <AwardInstrument>
      <Value>Standard Grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computing and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Nina Amla</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>Many object-oriented programs, and in particular large enterprise applications, suffer from chronic run-time bloat: the excessive memory usage and run-time work that occur as part of seemingly simple computations. Such bloat significantly affects scalability and performance, and presents a serious problem for software used every day by thousands of businesses. Performance tuning may find substantial optimization opportunities, but it is very labor-intensive and requires a great deal of skill.&lt;br/&gt;&lt;br/&gt;This project develops novel algorithms for run-time analysis of Java programs to identify the symptoms of bloat and to pinpoint their causes. These algorithms can be used in checking tools during software development, and later in tuning tools for performance debugging. A framework for algorithm design and implementation defines a generalized form of a run-time data dependence graph, with abstractions specific to the targeted analysis, and with several dimensions of parameterization. Framework instances are used to create analyses of temporary data structures, analyses of copy chains, data structure cost-benefit analyses, and analyses of inefficiently-used containers. Experimental evaluation investigates the cost/precision trade-offs in the design and implementation of these algorithms, and their effectiveness in helping a programmer to improve performance.&lt;br/&gt;&lt;br/&gt;The project provides a foundation for systematic exploration of bloat analyses, which will help increase software performance and reduce tuning efforts. The framework and its instances will be made publicly available. These advances could become part of development toolkits, leading to higher performance of enterprise applications. Educational efforts will contribute to the skills of the next generation of developers of enterprise systems.</AbstractNarration>
    <MinAmdLetterDate>09/15/2010</MinAmdLetterDate>
    <MaxAmdLetterDate>09/15/2010</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1017204</AwardID>
    <Investigator>
      <FirstName>Atanas</FirstName>
      <LastName>Rountev</LastName>
      <EmailAddress>rountev@cse.ohio-state.edu</EmailAddress>
      <StartDate>09/15/2010</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>Ohio State University</Name>
      <CityName>Columbus</CityName>
      <ZipCode>432101016</ZipCode>
      <PhoneNumber>6146888735</PhoneNumber>
      <StreetAddress>Office of Sponsored Programs</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Ohio</StateName>
      <StateCode>OH</StateCode>
    </Institution>
    <ProgramElement>
      <Code>7944</Code>
      <Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
    </ProgramElement>
    <ProgramReference>
      <Code>9150</Code>
      <Text>EXP PROG TO STIM COMP RES</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>9218</Code>
      <Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>HPCC</Code>
      <Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
    </ProgramReference>
  </Award>
</rootTag>
