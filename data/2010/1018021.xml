<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>NeTS-Small: Collaborative Research: Network-Wide Configuration Testing and Synthesis</AwardTitle>
    <AwardEffectiveDate>09/01/2010</AwardEffectiveDate>
    <AwardExpirationDate>08/31/2015</AwardExpirationDate>
    <AwardAmount>250000</AwardAmount>
    <AwardInstrument>
      <Value>Standard Grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05050000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Division Of Computer and Network Systems</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>John Brassil</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>The behavior of a communications network depends on the configuration&lt;br/&gt;of hundreds to thousands of switches, routers, firewalls, and other&lt;br/&gt;devices. For example, a campus network may have as many as 2,000&lt;br/&gt;inter-operating network devices and about one million lines of&lt;br/&gt;configuration; whether the network operates correctly depends for the&lt;br/&gt;most part on the configuration of these devices. Human configuration&lt;br/&gt;errors are the single biggest contributor to network downtime. This&lt;br/&gt;project seeks to develop techniques to make networks easier to manage&lt;br/&gt;by improving both configuration testing and synthesis. Testing takes&lt;br/&gt;as input an existing network configuration and determines whether the&lt;br/&gt;configuration is operating correctly. Synthesis generates&lt;br/&gt;configurations automatically. The project draws on two testing&lt;br/&gt;techniques to make network configurations easier to test: differential&lt;br/&gt;testing and dynamic testing. Differential testing generates test&lt;br/&gt;cases to characterize the run-time behavior of two different programs;&lt;br/&gt;analyzing differences in network-wide configurations can help testing&lt;br/&gt;by allowing test cases to focus on the smaller subset of&lt;br/&gt;configurations that change more frequently. Differential analysis may&lt;br/&gt;make testing more tractable by reducing the amount of configuration to&lt;br/&gt;test. Dynamic testing checks the correctness of a program by&lt;br/&gt;executing it; this execution can be performed in a parallel "shadow"&lt;br/&gt;network, for example. The expected results from this project include&lt;br/&gt;tools for network operators to test and automatically generate&lt;br/&gt;network-wide configurations for both enterprise and ISP networks. The&lt;br/&gt;tools will also be useful in graduate-level courses.</AbstractNarration>
    <MinAmdLetterDate>07/14/2010</MinAmdLetterDate>
    <MaxAmdLetterDate>08/05/2014</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1018021</AwardID>
    <Investigator>
      <FirstName>Nicholas</FirstName>
      <LastName>Feamster</LastName>
      <EmailAddress>feamster@cs.princeton.edu</EmailAddress>
      <StartDate>07/14/2010</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>Georgia Tech Research Corporation</Name>
      <CityName>Atlanta</CityName>
      <ZipCode>303320420</ZipCode>
      <PhoneNumber>4048944819</PhoneNumber>
      <StreetAddress>Office of Sponsored Programs</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Georgia</StateName>
      <StateCode>GA</StateCode>
    </Institution>
    <ProgramElement>
      <Code>7363</Code>
      <Text>RES IN NETWORKING TECH &amp; SYS</Text>
    </ProgramElement>
    <ProgramReference>
      <Code>7923</Code>
      <Text>SMALL PROJECT</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>9150</Code>
      <Text>EXP PROG TO STIM COMP RES</Text>
    </ProgramReference>
  </Award>
</rootTag>
