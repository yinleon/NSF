<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>SHF: EAGER: FIESTA: A Sound Multi-Program Workload Methodology</AwardTitle>
    <AwardEffectiveDate>07/01/2010</AwardEffectiveDate>
    <AwardExpirationDate>10/31/2012</AwardExpirationDate>
    <AwardAmount>188528</AwardAmount>
    <AwardInstrument>
      <Value>Standard Grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Directorate for Computer &amp; Information Science &amp; Engineering</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computer and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Ahmed Louri</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>Multi-program execution, the concurrent execution of multiple independent applications, will play an important role in efficiently exploiting the potential of future multi-core systems. Researchers use multi-program workloads to evaluate proposed designs and policies for various aspects of multi-program execution. Unfortunately, the fixed workload and variable workload multi-program workload methodologies used today are unsound and lead to incorrect results. Therefore, the proposed research is aimed at investigating a new multi-program workload construction scheme, called FIESTA (Fixed Instruction with Equal STAndalone runtimes), in which application samples are chosen so that individual application have equal runtimes when executing alone. Samples are then mixed and matched to form multi-program workloads, but the same samples are used in every experiment. The research will investigate two issues related to FIESTA: Generation of application samples and Extension to multi-threaded environments. FIESTA workloads should produce results that are internally consistent and plausible.&lt;br/&gt;&lt;br/&gt;Computer architecture research surges when new tools, benchmarks, and methodologies are introduced and distributed. The quality and depth of single-program experimental evaluation improved when efficient sampling and simulation techniques like SimPoints were introduced. FIESTA should provide the same impetus for multi-program execution research and education, while becoming the standard methodology for sampling both single-threaded and multi-threaded programs.</AbstractNarration>
    <MinAmdLetterDate>06/06/2010</MinAmdLetterDate>
    <MaxAmdLetterDate>05/23/2012</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1012008</AwardID>
    <Investigator>
      <FirstName>Daniel</FirstName>
      <LastName>Sorin</LastName>
      <EmailAddress>sorin@ee.duke.edu</EmailAddress>
      <StartDate>05/23/2012</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Investigator>
      <FirstName>Amir</FirstName>
      <LastName>Roth</LastName>
      <EmailAddress>amir@cis.upenn.edu</EmailAddress>
      <StartDate>06/06/2010</StartDate>
      <EndDate>05/23/2012</EndDate>
      <RoleCode>Former Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>University of Pennsylvania</Name>
      <CityName>Philadelphia</CityName>
      <ZipCode>191046205</ZipCode>
      <PhoneNumber>2158987293</PhoneNumber>
      <StreetAddress>Research Services</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Pennsylvania</StateName>
      <StateCode>PA</StateCode>
    </Institution>
  </Award>
</rootTag>
